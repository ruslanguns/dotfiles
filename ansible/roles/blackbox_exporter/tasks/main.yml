- name: arch map
  ansible.builtin.set_fact:
    arch_map:
      x86_64: amd64
      aarch64: arm64
      armv7l: armv7
      armv6l: armv6
      i386: 386
      ppc64le: ppc64le
      s390x: s390x
      riscv64: riscv64

- name: set goarch
  ansible.builtin.set_fact:
    goarch: "{{ arch_map[ansible_architecture] | default('') }}"
  failed_when: goarch == ""

- name: resolve latest
  when: blackbox_exporter_latest | bool
  ansible.builtin.uri:
    url: https://api.github.com/repos/prometheus/blackbox_exporter/releases/latest
    return_content: true
  register: latest_release

- name: set version
  ansible.builtin.set_fact:
    resolved_version: "{{ (blackbox_exporter_latest | bool) | ternary(latest_release.json.tag_name, blackbox_exporter_version) }}"

- name: set paths part1
  ansible.builtin.set_fact:
    tarball: "blackbox_exporter-{{ resolved_version | regex_replace('^v','') }}.linux-{{ goarch }}.tar.gz"
    base_url: "https://github.com/prometheus/blackbox_exporter/releases/download/{{ resolved_version }}"
    dest_dir: "/usr/local/bin"

- name: set paths part2
  ansible.builtin.set_fact:
    tar_url: "{{ base_url }}/{{ tarball }}"
    sha_url: "{{ base_url }}/sha256sums.txt"

- name: fetch sha file
  ansible.builtin.uri:
    url: "{{ sha_url }}"
    return_content: true
  register: _sha

- name: split sha lines
  ansible.builtin.set_fact:
    _sha_lines: "{{ _sha.content.splitlines() }}"

- name: pick checksum line
  ansible.builtin.set_fact:
    _sha_line: "{{ item }}"
  loop: "{{ _sha_lines }}"
  when: item.endswith(' ' ~ tarball)
  run_once: true

- name: fail if checksum not found
  ansible.builtin.fail:
    msg: "checksum line not found for {{ tarball }}"
  when: _sha_line is not defined or _sha_line | length == 0

- name: set checksum value
  ansible.builtin.set_fact:
    tar_sha256: "{{ _sha_line.split()[0] }}"

- name: ensure install dir
  become: true
  ansible.builtin.file:
    path: "{{ dest_dir }}"
    state: directory
    mode: "0755"

- name: download tarball
  become: true
  ansible.builtin.get_url:
    url: "{{ tar_url }}"
    dest: "/tmp/{{ tarball }}"
    checksum: "sha256:{{ tar_sha256 }}"
    mode: "0644"

- name: unarchive
  become: true
  ansible.builtin.unarchive:
    src: "/tmp/{{ tarball }}"
    dest: /tmp
    remote_src: true

- name: install binary
  become: true
  ansible.builtin.copy:
    src: "/tmp/blackbox_exporter-{{ resolved_version | regex_replace('^v','') }}.linux-{{ goarch }}/blackbox_exporter"
    dest: "/usr/local/bin/blackbox_exporter"
    mode: "0755"
    owner: root
    group: root
    remote_src: true
  notify: restart blackbox_exporter

- name: write config
  become: true
  ansible.builtin.template:
    src: blackbox.yml.j2
    dest: "{{ blackbox_exporter_config_path }}"
    mode: "0644"
    owner: root
    group: root
  notify: restart blackbox_exporter

- name: unit file
  become: true
  ansible.builtin.template:
    src: blackbox_exporter.service.j2
    dest: /etc/systemd/system/blackbox_exporter.service
    mode: "0644"
  notify: restart blackbox_exporter

- name: daemon reload
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: enable service
  become: true
  ansible.builtin.systemd:
    name: blackbox_exporter
    enabled: true

- name: ensure running
  become: true
  ansible.builtin.systemd:
    name: blackbox_exporter
    state: started

- name: cleanup temp files
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/{{ tarball }}"
    - "/tmp/blackbox_exporter-{{ resolved_version | regex_replace('^v','') }}.linux-{{ goarch }}"
