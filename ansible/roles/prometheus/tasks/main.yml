---
- name: Ensure prometheus user exists
  become: true
  ansible.builtin.user:
    name: prometheus
    system: true
    shell: /usr/sbin/nologin
    create_home: false

- name: Create directories
  become: true
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: prometheus
    group: prometheus
    mode: "0755"
  loop:
    - "{{ prometheus_data_dir }}"
    - "{{ prometheus_config_dir }}"
    - "{{ prometheus_config_dir }}/rules"
    - "{{ prometheus_config_dir }}/consoles"
    - "{{ prometheus_config_dir }}/console_libraries"

- name: Set architecture mapping
  ansible.builtin.set_fact:
    arch_map:
      x86_64: amd64
      aarch64: arm64
      armv7l: armv7

- name: Set architecture
  ansible.builtin.set_fact:
    goarch: "{{ arch_map[ansible_architecture] | default('') }}"
  failed_when: goarch == ""

- name: Set download paths
  ansible.builtin.set_fact:
    tarball: "prometheus-{{ prometheus_version | replace('v', '') }}.linux-{{ goarch }}.tar.gz"
    base_url: "https://github.com/prometheus/prometheus/releases/download/{{ prometheus_version }}"
    dest_dir: "/usr/local/bin"

- name: Update download paths
  ansible.builtin.set_fact:
    tar_url: "{{ base_url }}/{{ tarball }}"
    sha_url: "{{ base_url }}/sha256sums.txt"

- name: Fetch checksum file
  ansible.builtin.uri:
    url: "{{ sha_url }}"
    return_content: true
  register: _sha

- name: split sha lines
  ansible.builtin.set_fact:
    _sha_lines: "{{ _sha.content.splitlines() }}"

- name: pick checksum line
  ansible.builtin.set_fact:
    _sha_line: "{{ item }}"
  loop: "{{ _sha_lines }}"
  when: item.endswith(' ' ~ tarball)
  run_once: true

- name: fail if checksum not found
  ansible.builtin.fail:
    msg: "checksum line not found for {{ tarball }}"
  when: _sha_line is not defined or _sha_line | length == 0

- name: set checksum value
  ansible.builtin.set_fact:
    tar_sha256: "{{ _sha_line.split()[0] }}"

- name: Download Prometheus tarball
  become: true
  ansible.builtin.get_url:
    url: "{{ tar_url }}"
    dest: "/tmp/{{ tarball }}"
    checksum: "sha256:{{ tar_sha256 }}"
    mode: "0644"

- name: Unarchive Prometheus
  become: true
  ansible.builtin.unarchive:
    src: "/tmp/{{ tarball }}"
    dest: "{{ dest_dir }}"
    extra_opts: [--strip-components=1]
    remote_src: true
    owner: root
    group: root
    mode: "0755"
  notify: restart prometheus

- name: Copy console files
  become: true
  ansible.builtin.copy:
    src: "{{ dest_dir }}/{{ item }}"
    dest: "{{ prometheus_config_dir }}/{{ item }}"
    remote_src: true
    owner: prometheus
    group: prometheus
  loop:
    - consoles
    - console_libraries

- name: Create config file
  become: true
  ansible.builtin.template:
    src: prometheus.yml.j2
    dest: "{{ prometheus_config_path }}"
    mode: "0644"
  notify: restart prometheus

- name: Create systemd unit file
  become: true
  ansible.builtin.template:
    src: prometheus.service.j2
    dest: "{{ prometheus_service_path }}"
    mode: "0644"
  notify: restart prometheus

- name: Reload systemd daemon
  become: true
  ansible.builtin.systemd:
    daemon_reload: true

- name: Enable and start service
  become: true
  ansible.builtin.systemd:
    name: prometheus
    enabled: true
    state: started

- name: Clean up temporary files
  become: true
  ansible.builtin.file:
    path: "/tmp/{{ tarball }}"
    state: absent
