set shell := ["bash", "-euo", "pipefail", "-c"]

default:
	@just --list

_node_inv HOSTS:
	{ V="{{HOSTS}}"; case "$V" in *=*) V="${V#*=}";; esac; case "$V" in *","*) printf "%s\n" "$V";; "") echo "HOSTS is required" >&2; exit 2;; *) printf "%s\n" "${V},";; esac; }

node_exporter HOSTS USER="rus" PORT="22" SSH_ARGS="" *ARGS="":
	{ \
	  B="{{justfile_directory()}}"; \
	  INV="$(just _node_inv "{{HOSTS}}")"; \
	  U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
	  ANSIBLE_CONFIG="$B/ansible.cfg" \
	  ANSIBLE_ROLES_PATH="$B/roles" \
	  ansible-playbook \
	    -i "$INV" \
	    -u "$U" \
	    --ssh-extra-args "-p $P $S" \
	    {{ARGS}} \
	    "$B/playbooks/node_exporter.yml"; \
	}

pve_exporter HOSTS TOKEN USER="" API_URL="" VERIFY_SSL="" LISTEN="" PORT="22" SSH_ARGS="":
	{ \
	  B="{{justfile_directory()}}"; \
	  INV="$(just _node_inv "{{HOSTS}}")"; \
	  T="{{TOKEN}}"; case "$T" in *=*) T="${T#*=}";; esac; [ -n "$T" ] || { echo "TOKEN is required" >&2; exit 2; }; \
	  U="{{USER}}"; A="{{API_URL}}"; VS="{{VERIFY_SSL}}"; L="{{LISTEN}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
	  UF=""; [ -n "$U" ] && UF="-u $U"; BEC=""; [ -n "$U" ] && [ "$U" != "root" ] && BEC="--become"; \
	  EX="-e pve_token_value='$T'"; \
	  [ -n "$A" ]  && EX="$EX -e pve_api_url='$A'"; \
	  [ -n "$VS" ] && EX="$EX -e pve_verify_ssl=$VS"; \
	  [ -n "$L" ]  && EX="$EX -e pve_listen='$L'"; \
	  ANSIBLE_CONFIG="$B/ansible.cfg" \
	  ANSIBLE_ROLES_PATH="$B/roles" \
	  ansible-playbook \
	    -i "$INV" \
	    $UF \
	    $BEC \
	    --ssh-extra-args "-p $P $S" \
	    $EX \
	    "$B/playbooks/pve_exporter.yml"; \
	}

blackbox_exporter HOSTS USER="rus" PORT="22" SSH_ARGS="" VERSION="v0.27.0" LATEST="false" LISTEN=":9115" FLAGS="" CONFIG="/etc/blackbox.yml":
	{ \
	  B="{{justfile_directory()}}"; \
	  INV="$(just _node_inv "{{HOSTS}}")"; \
	  U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
	  EX="-e blackbox_exporter_version={{VERSION}} -e blackbox_exporter_latest={{LATEST}} -e blackbox_exporter_listen='{{LISTEN}}' -e blackbox_exporter_config_path='{{CONFIG}}'"; \
	  if [ -n "{{FLAGS}}" ]; then EX="$EX -e blackbox_exporter_flags='{{FLAGS}}'"; fi; \
	  ANSIBLE_CONFIG="$B/ansible.cfg" \
	  ANSIBLE_ROLES_PATH="$B/roles" \
	  ansible-playbook \
	    -i "$INV" \
	    -u "$U" \
	    --ssh-extra-args "-p $P $S" \
	    $EX \
	    "$B/playbooks/blackbox_exporter.yml"; \
	}

remove_node_exporter HOSTS USER="rus" PORT="22" SSH_ARGS="":
	{ \
	  B="{{justfile_directory()}}"; \
	  INV="$(just _node_inv "{{HOSTS}}")"; \
	  U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
	  BEC=""; if [ "$U" != "root" ]; then BEC="--become"; fi; \
	  ANSIBLE_CONFIG="$B/ansible.cfg" ANSIBLE_ROLES_PATH="$B/roles" \
	  ansible-playbook -i "$INV" -u "$U" $BEC --ssh-extra-args "-p $P $S" \
	    -e confirm_remove=true \
	    "$B/playbooks/remove_node_exporter.yml"; \
	}

remove_blackbox_exporter HOSTS USER="rus" PORT="22" SSH_ARGS="":
	{ \
	  B="{{justfile_directory()}}"; \
	  INV="$(just _node_inv "{{HOSTS}}")"; \
	  U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
	  BEC=""; if [ "$U" != "root" ]; then BEC="--become"; fi; \
	  ANSIBLE_CONFIG="$B/ansible.cfg" ANSIBLE_ROLES_PATH="$B/roles" \
	  ansible-playbook -i "$INV" -u "$U" $BEC --ssh-extra-args "-p $P $S" \
	    -e confirm_remove=true \
	    -e archive_before_remove=false \
	    "$B/playbooks/remove_blackbox_exporter.yml"; \
	}

remove_pve_exporter HOSTS USER="rus" PORT="22" SSH_ARGS="":
	{ \
	  B="{{justfile_directory()}}"; \
	  INV="$(just _node_inv "{{HOSTS}}")"; \
	  U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
	  BEC=""; if [ "$U" != "root" ]; then BEC="--become"; fi; \
	  ANSIBLE_CONFIG="$B/ansible.cfg" ANSIBLE_ROLES_PATH="$B/roles" \
	  ansible-playbook -i "$INV" -u "$U" $BEC --ssh-extra-args "-p $P $S" \
	    -e confirm_remove=true \
	    -e archive_before_remove=false \
	    "$B/playbooks/remove_pve_exporter.yml"; \
	}
prometheus HOSTS USER="rus" PORT="22" SSH_ARGS="" VERSION="v3.5.0" LATEST="false" LISTEN=":9090" FLAGS="":
  { \
    B="{{justfile_directory()}}"; \
    INV="$(just _node_inv \"{{HOSTS}}\")"; \
    U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
    EX="-e prometheus_version={{VERSION}} -e prometheus_latest={{LATEST}} -e prometheus_listen='{{LISTEN}}'"; \
    if [ -n "{{FLAGS}}" ]; then EX="$EX -e prometheus_flags='{{FLAGS}}'"; fi; \
    ANSIBLE_CONFIG="$B/ansible.cfg" \
    ANSIBLE_ROLES_PATH="$B/roles" \
    ansible-playbook \
      -i "$INV" \
      -u "$U" \
      --ssh-extra-args "-p $P $S" \
      $EX \
      "$B/playbooks/prometheus.yml"; \
  }

remove_prometheus HOSTS USER="rus" PORT="22" SSH_ARGS="":
  { \
    B="{{justfile_directory()}}"; \
    INV="$(just _node_inv \"{{HOSTS}}\")"; \
    U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
    BEC=""; if [ "$U" != "root" ]; then BEC="--become"; fi; \
    ANSIBLE_CONFIG="$B/ansible.cfg" ANSIBLE_ROLES_PATH="$B/roles" \
    ansible-playbook -i "$INV" -u "$U" $BEC --ssh-extra-args "-p $P $S" \
      -e confirm_remove=true \
      "$B/playbooks/remove_prometheus.yml"; \
  }

firewall HOSTS USER="rus" PORT="22" SSH_ARGS="" *ARGS="":
  { \
    B="{{justfile_directory()}}"; \
    U="{{USER}}"; P="{{PORT}}"; S="{{SSH_ARGS}}"; \
    ANSIBLE_CONFIG="$B/ansible.cfg" \
    ANSIBLE_ROLES_PATH="$B/roles" \
    ansible-playbook \
      -i "$B/inventory/hosts.yml" \
      -u "$U" \
      --ssh-extra-args "-p $P $S" \
      --limit "{{HOSTS}}" \
      {{ARGS}} \
      "$B/playbooks/firewall.yml"; \
  }

